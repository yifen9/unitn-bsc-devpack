name: release
on:
  push:
    tags:
      - "v*"
  workflow_dispatch: {}

permissions:
  contents: write

env:
  IMAGE_REF: ghcr.io/${{ github.repository_owner }}/unitn-bsc-devpack:latest

jobs:
  package-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
    steps:
      - uses: actions/checkout@v4
      - name: Download nix-portable
        run: |
          case "${{ matrix.arch }}" in
            amd64) NIXFILE=nix-portable-x86_64-linux ;;
            arm64) NIXFILE=nix-portable-aarch64-linux ;;
          esac
          curl -L -o nix-portable \
            https://github.com/DavHau/nix-portable/releases/download/v010/$NIXFILE
          chmod +x nix-portable
      - name: Prepare bundle
        run: |
          set -eux
          B=devpack-linux-${{ matrix.arch }}
          mkdir -p bundle/$B
          cp nix-portable bundle/$B/
          mkdir -p bundle/$B/workspace bundle/$B/config
          echo "${{ env.IMAGE_REF }}" > bundle/$B/config/image.txt
          cat > bundle/$B/run.sh <<'SH'
          #!/usr/bin/env bash
          set -e
          here="$(cd "$(dirname "$0")" && pwd)"
          export PATH="$here:$PATH"
          mkdir -p "$here/workspace"
          exec "$here/nix-portable" nix run nixpkgs#code-server -- --bind-addr 0.0.0.0:8080 --auth=none "$here/workspace"
          SH
          chmod +x bundle/$B/run.sh
      - name: Archive
        run: |
          set -eux
          cd bundle
          tar -czf devpack-linux-${{ matrix.arch }}.tar.gz devpack-linux-${{ matrix.arch }}
      - uses: actions/upload-artifact@v4
        with:
          name: devpack-linux-${{ matrix.arch }}
          path: bundle/devpack-linux-${{ matrix.arch }}.tar.gz

  package-desktop:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [windows, darwin]
        arch: [amd64, arm64]
        exclude:
          - os: windows
            arch: arm64
          - os: darwin
            arch: amd64
    steps:
      - uses: actions/checkout@v4
      - name: Prepare bundle
        run: |
          set -eux
          B=devpack-${{ matrix.os }}-${{ matrix.arch }}
          mkdir -p bundle/$B/workspace bundle/$B/config
          echo "${{ env.IMAGE_REF }}" > bundle/$B/config/image.txt
          if [ "${{ matrix.os }}" = "windows" ]; then
            {
              echo '$here = Split-Path -Parent $MyInvocation.MyCommand.Definition'
              echo '$image = Get-Content "$here\config\image.txt"'
              echo 'docker rm -f devpack 2>$null | Out-Null'
              echo 'docker run -d --name devpack -p 8080:8080 -v "$here\workspace:/workspace" $image'
              echo 'Start-Sleep -Seconds 1'
              echo 'Start-Process "http://localhost:8080"'
            } > bundle/$B/run.ps1
          else
            {
              echo '#!/usr/bin/env bash'
              echo 'set -e'
              echo 'here="$(cd "$(dirname "$0")" && pwd)"'
              echo 'image="$(cat "$here/config/image.txt")"'
              echo 'docker rm -f devpack >/dev/null 2>&1 || true'
              echo 'docker run -d --name devpack -p 8080:8080 -v "$here/workspace:/workspace" "$image"'
              echo 'sleep 1'
              echo 'open "http://localhost:8080"'
            } > bundle/$B/run.sh
            chmod +x bundle/$B/run.sh
          fi
      - name: Archive
        run: |
          set -eux
          cd bundle
          if [ "${{ matrix.os }}" = "windows" ]; then
            7z a devpack-windows-${{ matrix.arch }}.zip devpack-windows-${{ matrix.arch }} >/dev/null
          else
            tar -czf devpack-darwin-${{ matrix.arch }}.tar.gz devpack-darwin-${{ matrix.arch }}
          fi
      - uses: actions/upload-artifact@v4
        with:
          name: devpack-${{ matrix.os }}-${{ matrix.arch }}
          path: |
            bundle/*.tar.gz
            bundle/*.zip

  publish:
    runs-on: ubuntu-latest
    needs: [package-linux, package-desktop]
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true
      - run: ls -R dist
      - run: |
          cd dist
          find . -type f -name "*.tar.gz" -o -name "*.zip" | sort | xargs sha256sum > SHA256SUMS.txt
      - uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            dist/**/*.tar.gz
            dist/**/*.zip
            dist/SHA256SUMS.txt
          generate_release_notes: true