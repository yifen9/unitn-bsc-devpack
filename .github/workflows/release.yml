name: release
on:
  push:
    tags:
      - "v*"
  workflow_dispatch: {}

permissions:
  contents: write

env:
  IMAGE_REF: ghcr.io/${{ github.repository_owner }}/unitn-bsc-devpack:latest
  NERDCTL_VERSION: 1.7.6
  CONTAINERD_VERSION: 1.7.20

jobs:
  package:
    name: Package one-click bundles
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, windows]
        arch: [amd64, arm64]
        exclude:
          - os: windows
            arch: arm64
    steps:
      - uses: actions/checkout@v4

      - name: Prepare bundle dir
        run: |
          set -eux
          B=oneclick-${{ matrix.os }}-${{ matrix.arch }}
          mkdir -p "bundle/$B/bin" "bundle/$B/config"
          echo "${{ env.IMAGE_REF }}" > "bundle/$B/config/image.txt"

      - name: Fetch nerdctl + containerd
        run: |
          set -eux
          B=oneclick-${{ matrix.os }}-${{ matrix.arch }}
          cd "bundle/$B/bin"

          case "${{ matrix.os }}" in
            linux)   OS=linux   ;;
            windows) OS=windows ;;
          esac
          ARCH="${{ matrix.arch }}"

          curl -fsSL -o nerdctl.tgz \
            "https://github.com/containerd/nerdctl/releases/download/v${{ env.NERDCTL_VERSION }}/nerdctl-${{ env.NERDCTL_VERSION }}-${OS}-${ARCH}.tar.gz"
          tar -xzf nerdctl.tgz
          rm -f nerdctl.tgz

          curl -fsSL -o containerd.tgz \
            "https://github.com/containerd/containerd/releases/download/v${{ env.CONTAINERD_VERSION }}/containerd-${{ env.CONTAINERD_VERSION }}-${OS}-${ARCH}.tar.gz"
          tar -xzf containerd.tgz --strip-components=1 -C .
          rm -f containerd.tgz

      - name: Add run scripts
        run: |
          set -eux
          B=oneclick-${{ matrix.os }}-${{ matrix.arch }}
          cd "bundle/$B"

          # Linux
          cat > run.sh <<'SH'
          #!/usr/bin/env bash
          set -e
          here="$(cd "$(dirname "$0")" && pwd)"
          export PATH="$here/bin:$PATH"
          mkdir -p "$here/workspace"
          nohup "$here/bin/containerd" >/dev/null 2>&1 &
          sleep 1
          exec nerdctl run --rm -p 8080:8080 -v "$here/workspace:/workspace" "$(cat "$here/config/image.txt")"
          SH
          chmod +x run.sh

          # Windows
          cat > run.ps1 <<'PS1'
          $here = Split-Path -Parent $MyInvocation.MyCommand.Definition
          $env:PATH = "$here\bin;$env:PATH"
          New-Item -ItemType Directory -Force -Path "$here\workspace" | Out-Null
          Start-Process -FilePath "$here\bin\containerd.exe" -ArgumentList "" -WindowStyle Hidden
          Start-Sleep -Seconds 1
          & "$here\bin\nerdctl.exe" run --rm -p 8080:8080 -v "$here\workspace:/workspace" (Get-Content "$here/config/image.txt")
          PS1

      - name: Archive bundle
        run: |
          set -eux
          B=oneclick-${{ matrix.os }}-${{ matrix.arch }}
          cd bundle
          if [ "${{ matrix.os }}" = "windows" ]; then
            7z a "$B.zip" "$B" >/dev/null
          else
            tar -czf "$B.tar.gz" "$B"
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: oneclick-${{ matrix.os }}-${{ matrix.arch }}
          path: bundle/*

  publish:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: package
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          path: dist
      - name: Checksums
        run: |
          cd dist
          find . -type f -name "*.tar.gz" -o -name "*.zip" | sort | xargs sha256sum > SHA256SUMS.txt
      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/**/*.{tar.gz,zip}
            dist/SHA256SUMS.txt
          generate_release_notes: true
